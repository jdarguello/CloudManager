apiVersion: batch/v1
kind: CronJob
metadata:
  name: refresh-cluster-kubeconfig-secret
  namespace: ${SPOKE_NS}
spec:
  schedule: "*/5 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: flux-admin
          restartPolicy: OnFailure
          containers:
          - name: refresh
            image: bitnami/kubectl:latest
            command:
            - /bin/bash
            - -c
            - |
              # 1) dump the secret into a file
              kubectl get secret cluster-kubeconfig -n ${SPOKE_NS} \
                -o jsonpath='{.data.value}' | base64 -d > /tmp/kubeconfig.yaml

              # 2) generate the new token
              NEW_TOKEN=$(kubectl --kubeconfig=/tmp/kubeconfig.yaml create token flux-admin -n admin)

              # 3) Remove any existing token lines
              grep -v '^[[:space:]]*token:' /tmp/kubeconfig.yaml > /tmp/kc_notok.yaml

              # 4) Inject the new token after the `user:` line
              awk -v tok="$NEW_TOKEN" '
                /^[[:space:]]*user:[[:space:]]*$/ {
                  print                           # the "  user:" line
                  print "    token: " tok         # indent 4 spaces, then token
                  next
                }
                { print }
              ' /tmp/kc_notok.yaml > /tmp/kubeconfig.yaml

              # 5) reâ€‘apply the file back into the Secret
              kubectl create secret generic cluster-kubeconfig -n ${SPOKE_NS} \
                --from-file=value=/tmp/kubeconfig.yaml \
                --dry-run=client -o yaml \
              | kubectl apply -f -


