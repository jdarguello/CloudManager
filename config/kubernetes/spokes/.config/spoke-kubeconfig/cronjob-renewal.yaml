apiVersion: batch/v1
kind: CronJob
metadata:
  name: refresh-cluster-kubeconfig-secret
  namespace: ${SPOKE_NS}
spec:
  schedule: "*/2 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: flux-admin
          restartPolicy: OnFailure
          containers:
          - name: refresh
            image: bitnami/kubectl:latest
            command:
            - /bin/bash
            - -c
            - |
              # 1) dump the secret into a file
              kubectl get secret cluster-kubeconfig -n ${SPOKE_NS} \
                -o jsonpath='{.data.value}' | base64 -d > /tmp/kubeconfig.yaml

              # 2) generate the new token
              NEW_TOKEN=$(kubectl --kubeconfig=/tmp/kubeconfig.yaml create token flux-admin -n admin)

              tmpfile=/tmp/kcfg.$$ 
              while IFS= read -r line; do
                if [[ $line =~ ^([[:space:]]*token:)[[:space:]] ]]; then
                  printf "%s %s\n" "${BASH_REMATCH[1]}" "$NEW_TOKEN"
                else
                  printf "%s\n" "$line"
                fi
              done < /tmp/kubeconfig.yaml > "$tmpfile" && mv "$tmpfile" /tmp/kubeconfig.yaml


              # 5) reâ€‘apply the file back into the Secret
              kubectl create secret generic cluster-kubeconfig -n ${SPOKE_NS} \
                --from-file=value=/tmp/kubeconfig.yaml \
                --dry-run=client -o yaml \
              | kubectl apply -f -


